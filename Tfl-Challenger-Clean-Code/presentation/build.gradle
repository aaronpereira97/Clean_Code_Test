apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'


allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.challenger.tfl_challenger_api_clean_archichecture.utils.OpenClass'
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")


    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        applicationId "com.example.tfl_challenger_api_clean_archichecture"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]

        versionCode globalConfiguration["versionCode"]
        versionName globalConfiguration["versionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
        testInstrumentationRunnerArguments clearPackageData: 'true'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'

    }


}


configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def appTestDependencies = rootProject.ext.appTestDependencies

    implementation project(path: ':remote')
    implementation project(path: ':data')
    implementation project(path: ':domain')

    //DEPENDENCIES
    implementation appDependencies.kotlin

    implementation appDependencies.appCompat

    implementation appDependencies.constraintLayout

    implementation appDependencies.cardview

    implementation appDependencies.lifecycleExtensions
    implementation appDependencies.lifecycleCommon

    implementation appDependencies.koinAndroid
    implementation appDependencies.koinScope
    implementation appDependencies.koinViewModel
    implementation appDependencies.retrofit
    implementation appDependencies.retrofitRxJava2Adapter
    implementation appDependencies.retrofitGsonConverter
    implementation appDependencies.rxJava
    implementation appDependencies.rxAndroid
    implementation appDependencies.rxView
    implementation appDependencies.LeakCanary


    //TESTING
    implementation  appTestDependencies.junit

    implementation  (appTestDependencies.mockito) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    androidTestImplementation appTestDependencies.testRunner

    androidTestImplementation appTestDependencies.testRules
    androidTestImplementation appTestDependencies.espressoCore
    androidTestImplementation appTestDependencies.espressoContrib




    def androidx_arch_test_version = '2.1.0'
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"


}